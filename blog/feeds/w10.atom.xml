<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>CMSimfly 網際內容管理 - w10</title><link href="./" rel="alternate"></link><link href=".%5Cfeeds/w10.atom.xml" rel="self"></link><id>./</id><updated>2020-05-22T14:00:00+08:00</updated><entry><title>2020 w10 課程摘要</title><link href=".%5C2020-WCM-W10-summary.html" rel="alternate"></link><published>2020-05-22T14:00:00+08:00</published><updated>2020-05-22T14:00:00+08:00</updated><author><name>50833110</name></author><id>tag:None,2020-05-22:.\2020-WCM-W10-summary.html</id><summary type="html">&lt;p&gt;如何以ssh維護cmsimde倉儲&lt;/p&gt;
</summary><content type="html">&lt;p&gt;如何以ssh維護cmsimde倉儲&lt;/p&gt;


&lt;h2&gt;以SSH維護倉儲&lt;/h2&gt;
&lt;p&gt;由於在電腦教室時採用純 IPv6 協定上網, 因此為了能夠在近端將倉儲改版資料推送到目前只接受 IPv4 協定連線的 github, 以下除了將原本以 https 對 github 連線, 改為以 ssh 協定連線外, 在 Windows 環境下必須利用 putty 與 plink, 設定 putty 格式的 .ppk 以及能夠同時支援 IPv4 與 IPv6 的代理主機.&lt;/p&gt;
&lt;p&gt;設定步驟如下:&lt;/p&gt;
&lt;p&gt;1.下載 Putty 工具組
從 https://www.chiark.greenend.org.uk/~sgtatham/putty/ 下載一般版, 或從 http://jakub.kotrla.net/putty/ 下載特殊   的可攜版本.&lt;/p&gt;
&lt;p&gt;2.利用 y:\portablegit\bin\sh.exe 進入 shell 命令環境後, 以 ssh-keygen -t rsa -b 4096 -C "使用者學號"
在 /y/home/.ssh 目錄下建立 id_rsa 與 id_rsa.pub 等 private key 與 public key
之後以 SciTE 開啟 id_rsa.pub 後, 將此 public key 的內容, 以新增添加到 Github.com 帳號下 personal settings -&amp;gt; SSH and GPG keys 頁面下.&lt;/p&gt;
&lt;p&gt;3.接下來要利用 puttygen.exe 將 id_rsa 轉為 Putty 可以解讀的 .ppk 格式, 並修改隨身系統的啟動批次檔案, 指定利用 putty 目錄下的 plink 執行 git 指令的網路代理設定.
修改啟動的 start.bat 加入下列設定:
&lt;pre class="brush:python"&gt;
set GIT_HOME=%Disk%:\portablegit\bin\
set GIT_SSH=%Disk%:\putty\plink.exe
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;4.利用 puttygen.exe 載入第二步驟所建立的 private key, 也就是 id_rsa.
開啟 puttygen 之後, 以右下方的 load 載入 id_rsa, 成功載入後, 利用 save private key 按鈕, 將已經轉為 putty 格式的 .ppk 存檔. 此一 .ppk 檔案必須在設定 putty 中 github.com session 時, 在 Connection-&amp;gt;SSH-&amp;gt;Auth 項目下, 將轉檔後的 .ppk 指向 private key file for authentication 欄位. 
並在 Connection-&amp;gt;Proxy 項目下, 指定 Proxy type: HTTP, 並將 IPv6 代理主機設為 ::53 或 ::42 埠號設為 3128.&lt;/p&gt;
&lt;p&gt;5.之後確定 home 下的 .ssh 目錄中的 config 設定
&lt;pre class="brush:jscript"&gt;&lt;/p&gt;
&lt;h1&gt;no proxy at home&lt;/h1&gt;
&lt;h1&gt;ProxyCommand y:/PortableGit/mingw64/bin/connect.exe -H proxy.mde.nfu.edu.tw:3128 %h %p&lt;/h1&gt;
&lt;h1&gt;set git_ssh=y:/putty/plink.exe with auth under putty github.com session setup&lt;/h1&gt;
&lt;p&gt;ProxyCommand y:/putty/plink.exe github.com %h %p&lt;/p&gt;
&lt;p&gt;Host github.com
    User git
    Port 22
    Hostname github.com&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="k"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exe&lt;/span&gt; &lt;span class="n"&gt;need&lt;/span&gt; &lt;span class="n"&gt;openssh&lt;/span&gt; &lt;span class="k"&gt;key&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;IdentityFile&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;y:\home\.ssh\id_rsa_mdecourse&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;plink&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exe&lt;/span&gt; &lt;span class="n"&gt;need&lt;/span&gt; &lt;span class="n"&gt;rsa&lt;/span&gt; &lt;span class="k"&gt;key&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="k"&gt;under&lt;/span&gt; &lt;span class="n"&gt;putty&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="k"&gt;session&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;plink&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exe&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;need&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;following&lt;/span&gt; &lt;span class="n"&gt;setting&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;IdentityFile&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;y:\home\.ssh\mdecourse_putty_private.ppk&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;TCPKeepAlive&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;span class="n"&gt;IdentitiesOnly&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;/pre&gt;

&lt;p&gt;6.最後再將 wcmj2020 倉儲中 .git 目錄下的 config 檔案中的連線協定, 由 https 改為採 ssh 連線
&lt;pre class="brush:python&gt;
[core]
    repositoryformatversion = 0
    filemode = false
    bare = false
    logallrefupdates = true
    symlinks = false
    ignorecase = true
[submodule]
    active = .
[remote "origin"]
    #url = https://github.com/mdecourse/wcmj2020.git
    url = git@github.com:mdecourse/wcmj2020.git
    fetch = +refs/heads/&lt;em&gt;:refs/remotes/origin/&lt;/em&gt;
[branch "master"]
    remote = origin
    merge = refs/heads/master
[submodule "cmsimde"]
    url = https://github.com/mdecourse/cmsimde.git
&lt;/pre&gt;&lt;/p&gt;
&lt;p&gt;之後就可以透過近端的 .ppk private key 與 Github.com 上的 public key 對應, 無需輸入帳號密碼就可以進行 git push.&lt;/p&gt;</content><category term="w10"></category><category term="2020wcmj"></category></entry></feed>